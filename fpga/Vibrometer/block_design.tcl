#*****************************************************************************************
# Vivado (TM) v2018.3 (64-bit)
#
# block_design.tcl: Tcl script for re-creating project 'Vibrometer'
#
# Generated by Vivado on Wed Jan 02 18:18:27 +0100 2019
# IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (block_design.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    <none>
#
# 3. The following remote source files that were added to the original project:-
#
#    "C:/Users/wilvin/Desktop/Git/Vibrometer/fpga/Vibrometer/extremum_finder.v"
#    "C:/Users/wilvin/Desktop/Git/Vibrometer/fpga/Vibrometer/position_tracker.v"
#    "C:/Users/wilvin/Desktop/Git/Vibrometer/fpga/Vibrometer/sync_manager.v"
#    "C:/Users/wilvin/Desktop/Git/Vibrometer/fpga/Vibrometer/system_wrapper.v"
#    "C:/Users/wilvin/Desktop/Git/Vibrometer/fpga/Vibrometer/sign_finder.v"
#    "C:/Users/wilvin/Desktop/Git/Vibrometer/fpga/constraints.xdc"
#    "C:/Users/wilvin/Desktop/Git/Vibrometer/fpga/Vibrometer/sync_manager_tb.v"
#    "C:/Users/wilvin/Desktop/Git/Vibrometer/fpga/Vibrometer/extremum_finder_tb.v"
#    "C:/Users/wilvin/Desktop/Git/Vibrometer/fpga/Vibrometer/position_tracker_tb.v"
#    "C:/Users/wilvin/Desktop/Git/Vibrometer/fpga/Vibrometer/axis_averager_tb.v"
#    "C:/Users/wilvin/Desktop/Git/Vibrometer/fpga/Vibrometer/extremum_finder_tb.wcfg"
#    "C:/Users/wilvin/Desktop/Git/Vibrometer/fpga/Vibrometer/position_tracker_tb.wcfg"
#    "C:/Users/wilvin/Desktop/Git/Vibrometer/fpga/Vibrometer/sign_finder_tb.v"
#    "C:/Users/wilvin/Desktop/Git/Vibrometer/fpga/Vibrometer/sync_manager_tb.wcfg"
#
#*****************************************************************************************

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "Vibrometer"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "block_design.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/../../artifacts/fpga/Vibrometer"]"

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xc7z010clg400-1

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "dsa.accelerator_binary_content" -value "bitstream" -objects $obj
set_property -name "dsa.accelerator_binary_format" -value "xclbin2" -objects $obj
set_property -name "dsa.description" -value "Vivado generated DSA" -objects $obj
set_property -name "dsa.dr_bd_base_address" -value "0" -objects $obj
set_property -name "dsa.emu_dir" -value "emu" -objects $obj
set_property -name "dsa.flash_interface_type" -value "bpix16" -objects $obj
set_property -name "dsa.flash_offset_address" -value "0" -objects $obj
set_property -name "dsa.flash_size" -value "1024" -objects $obj
set_property -name "dsa.host_architecture" -value "x86_64" -objects $obj
set_property -name "dsa.host_interface" -value "pcie" -objects $obj
set_property -name "dsa.num_compute_units" -value "60" -objects $obj
set_property -name "dsa.platform_state" -value "pre_synth" -objects $obj
set_property -name "dsa.vendor" -value "xilinx" -objects $obj
set_property -name "dsa.version" -value "0.0" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "part" -value "xc7z010clg400-1" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "1" -objects $obj
set_property -name "webtalk.ies_export_sim" -value "1" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "1" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "1" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "1" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "1" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "1" -objects $obj
set_property -name "webtalk.xsim_launch_sim" -value "57" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set IP repository paths
set obj [get_filesets sources_1]
set_property "ip_repo_paths" "[file normalize "$origin_dir/../../artifacts/cores"]" $obj

# Rebuild user ip_repo's index before adding any source files
update_ip_catalog -rebuild

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/extremum_finder.v"] \
 [file normalize "${origin_dir}/position_tracker.v"] \
 [file normalize "${origin_dir}/sync_manager.v"] \
 [file normalize "${origin_dir}/system_wrapper.v"] \
 [file normalize "${origin_dir}/sign_finder.v"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "system_wrapper" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../constraints.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/../constraints.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_constrs_file" -value "[file normalize "$origin_dir/../constraints.xdc"]" -objects $obj
set_property -name "target_part" -value "xc7z010clg400-1" -objects $obj
set_property -name "target_ucf" -value "[file normalize "$origin_dir/../constraints.xdc"]" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
set files [list \
 [file normalize "${origin_dir}/sync_manager_tb.v"] \
 [file normalize "${origin_dir}/extremum_finder_tb.v"] \
 [file normalize "${origin_dir}/position_tracker_tb.v"] \
 [file normalize "${origin_dir}/axis_averager_tb.v"] \
 [file normalize "${origin_dir}/extremum_finder_tb.wcfg"] \
 [file normalize "${origin_dir}/position_tracker_tb.wcfg"] \
 [file normalize "${origin_dir}/sign_finder_tb.v"] \
 [file normalize "${origin_dir}/sync_manager_tb.wcfg"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sim_1' fileset file properties for remote files
# None

# Set 'sim_1' fileset file properties for local files
# None

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "top" -value "sync_manager_tb" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Adding sources referenced in BDs, if not already added
if { [get_files extremum_finder.v] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/wilvin/Desktop/Git/Vibrometer/fpga/Vibrometer/extremum_finder.v
}
if { [get_files position_tracker.v] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/wilvin/Desktop/Git/Vibrometer/fpga/Vibrometer/position_tracker.v
}
if { [get_files sync_manager.v] == "" } {
  import_files -quiet -fileset sources_1 C:/Users/wilvin/Desktop/Git/Vibrometer/fpga/Vibrometer/sync_manager.v
}


# Proc to create BD system
proc cr_bd_system { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# extremum_finder, position_tracker, sync_manager



  # CHANGE DESIGN NAME HERE
  set design_name system

  common::send_msg_id "BD_TCL-003" "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:clk_wiz:6.0\
  pavel-demin:user:axis_red_pitaya_adc:2.0\
  xilinx.com:ip:axi_gpio:2.0\
  xilinx.com:ip:processing_system7:5.5\
  xilinx.com:ip:proc_sys_reset:5.0\
  xilinx.com:ip:axis_broadcaster:1.1\
  xilinx.com:ip:xlslice:1.0\
  xilinx.com:ip:axi_datamover:5.1\
  pavel-demin:user:axis_constant:1.0\
  pavel-demin:user:axis_red_pitaya_dac:1.0\
  xilinx.com:ip:dds_compiler:6.0\
  "

   set list_ips_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  extremum_finder\
  position_tracker\
  sync_manager\
  "

   set list_mods_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_msg_id "BD_TCL-008" "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_msg_id "BD_TCL-1003" "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  
# Hierarchical cell: Signal_Generator
proc create_hier_cell_Signal_Generator { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_Signal_Generator() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 31 -to 0 GPIO_sg
  create_bd_pin -dir I -type clk aclk
  create_bd_pin -dir O -type clk dac_clk
  create_bd_pin -dir O -from 13 -to 0 dac_dat
  create_bd_pin -dir O -type rst dac_rst
  create_bd_pin -dir O dac_sel
  create_bd_pin -dir O dac_wrt

  # Create instance: axis_constant_0, and set properties
  set axis_constant_0 [ create_bd_cell -type ip -vlnv pavel-demin:user:axis_constant:1.0 axis_constant_0 ]

  # Create instance: axis_red_pitaya_dac_0, and set properties
  set axis_red_pitaya_dac_0 [ create_bd_cell -type ip -vlnv pavel-demin:user:axis_red_pitaya_dac:1.0 axis_red_pitaya_dac_0 ]

  # Create instance: clk_wiz_0, and set properties
  set clk_wiz_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:clk_wiz:6.0 clk_wiz_0 ]
  set_property -dict [ list \
   CONFIG.CLKOUT1_JITTER {104.759} \
   CONFIG.CLKOUT1_REQUESTED_OUT_FREQ {250.000} \
   CONFIG.MMCM_CLKOUT0_DIVIDE_F {4.000} \
   CONFIG.MMCM_DIVCLK_DIVIDE {1} \
   CONFIG.USE_RESET {false} \
 ] $clk_wiz_0

  # Create instance: dds_compiler_0, and set properties
  set dds_compiler_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:dds_compiler:6.0 dds_compiler_0 ]
  set_property -dict [ list \
   CONFIG.Channels {1} \
   CONFIG.DATA_Has_TLAST {Not_Required} \
   CONFIG.DDS_Clock_Rate {125} \
   CONFIG.Frequency_Resolution {0.5} \
   CONFIG.Has_Phase_Out {false} \
   CONFIG.Latency {8} \
   CONFIG.M_DATA_Has_TUSER {Not_Required} \
   CONFIG.M_PHASE_Has_TUSER {Not_Required} \
   CONFIG.Noise_Shaping {Auto} \
   CONFIG.Output_Frequency1 {0} \
   CONFIG.Output_Width {14} \
   CONFIG.PINC1 {0} \
   CONFIG.Phase_Increment {Streaming} \
   CONFIG.Phase_Width {28} \
   CONFIG.S_PHASE_Has_TUSER {Not_Required} \
   CONFIG.Spurious_Free_Dynamic_Range {84} \
 ] $dds_compiler_0

  # Create interface connections
  connect_bd_intf_net -intf_net axis_constant_0_M_AXIS [get_bd_intf_pins axis_constant_0/M_AXIS] [get_bd_intf_pins dds_compiler_0/S_AXIS_PHASE]
  connect_bd_intf_net -intf_net dds_compiler_0_M_AXIS_DATA [get_bd_intf_pins axis_red_pitaya_dac_0/S_AXIS] [get_bd_intf_pins dds_compiler_0/M_AXIS_DATA]

  # Create port connections
  connect_bd_net -net GPIO_sg_1 [get_bd_pins GPIO_sg] [get_bd_pins axis_constant_0/cfg_data]
  connect_bd_net -net aclk_0_1 [get_bd_pins aclk] [get_bd_pins axis_constant_0/aclk] [get_bd_pins axis_red_pitaya_dac_0/aclk] [get_bd_pins clk_wiz_0/clk_in1] [get_bd_pins dds_compiler_0/aclk]
  connect_bd_net -net axis_red_pitaya_dac_0_dac_clk [get_bd_pins dac_clk] [get_bd_pins axis_red_pitaya_dac_0/dac_clk]
  connect_bd_net -net axis_red_pitaya_dac_0_dac_dat [get_bd_pins dac_dat] [get_bd_pins axis_red_pitaya_dac_0/dac_dat]
  connect_bd_net -net axis_red_pitaya_dac_0_dac_rst [get_bd_pins dac_rst] [get_bd_pins axis_red_pitaya_dac_0/dac_rst]
  connect_bd_net -net axis_red_pitaya_dac_0_dac_sel [get_bd_pins dac_sel] [get_bd_pins axis_red_pitaya_dac_0/dac_sel]
  connect_bd_net -net axis_red_pitaya_dac_0_dac_wrt [get_bd_pins dac_wrt] [get_bd_pins axis_red_pitaya_dac_0/dac_wrt]
  connect_bd_net -net clk_wiz_0_clk_out1 [get_bd_pins axis_red_pitaya_dac_0/ddr_clk] [get_bd_pins clk_wiz_0/clk_out1]
  connect_bd_net -net clk_wiz_0_locked [get_bd_pins axis_red_pitaya_dac_0/locked] [get_bd_pins clk_wiz_0/locked]

  # Perform GUI Layout
  regenerate_bd_layout -hierarchy [get_bd_cells /Signal_Generator] -layout_string {
   "ExpandedHierarchyInLayout":"",
   "guistr":"# # String gsaved with Nlview 6.8.11  2018-08-07 bk=1.4403 VDI=40 GEI=35 GUI=JA:9.0 non-TLS
#  -string -flagsOSRD
preplace port dac_clk -pg 1 -y 80 -defaultsOSRD
preplace port dac_sel -pg 1 -y 120 -defaultsOSRD
preplace port dac_wrt -pg 1 -y 140 -defaultsOSRD
preplace port dac_rst -pg 1 -y 100 -defaultsOSRD
preplace port aclk -pg 1 -y 20 -defaultsOSRD
preplace portBus dac_dat -pg 1 -y 160 -defaultsOSRD
preplace portBus GPIO_sg -pg 1 -y 90 -defaultsOSRD
preplace inst dds_compiler_0 -pg 1 -lvl 2 -y 90 -defaultsOSRD
preplace inst axis_constant_0 -pg 1 -lvl 1 -y 80 -defaultsOSRD
preplace inst clk_wiz_0 -pg 1 -lvl 2 -y 230 -defaultsOSRD
preplace inst axis_red_pitaya_dac_0 -pg 1 -lvl 3 -y 120 -defaultsOSRD
preplace netloc clk_wiz_0_locked 1 2 1 580
preplace netloc axis_red_pitaya_dac_0_dac_rst 1 3 1 NJ
preplace netloc axis_red_pitaya_dac_0_dac_sel 1 3 1 NJ
preplace netloc axis_red_pitaya_dac_0_dac_wrt 1 3 1 NJ
preplace netloc axis_constant_0_M_AXIS 1 1 1 N
preplace netloc clk_wiz_0_clk_out1 1 2 1 570
preplace netloc dds_compiler_0_M_AXIS_DATA 1 2 1 N
preplace netloc GPIO_sg_1 1 0 1 NJ
preplace netloc aclk_0_1 1 0 3 20 10 260 160 560J
preplace netloc axis_red_pitaya_dac_0_dac_clk 1 3 1 NJ
preplace netloc axis_red_pitaya_dac_0_dac_dat 1 3 1 NJ
levelinfo -pg 1 0 140 410 700 840 -top 0 -bot 300
"
}

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: RAM_Writer
proc create_hier_cell_RAM_Writer { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_RAM_Writer() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M_AXI_position
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_position

  # Create pins
  create_bd_pin -dir I -from 31 -to 0 GPIO_rw_i_1
  create_bd_pin -dir I -from 31 -to 0 GPIO_rw_i_2
  create_bd_pin -dir O -from 31 -to 0 GPIO_rw_o
  create_bd_pin -dir I aclk
  create_bd_pin -dir I aresetn

  # Create instance: axi_datamover, and set properties
  set axi_datamover [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_datamover:5.1 axi_datamover ]
  set_property -dict [ list \
   CONFIG.c_addr_width {32} \
   CONFIG.c_dummy {1} \
   CONFIG.c_enable_mm2s {0} \
   CONFIG.c_enable_mm2s_adv_sig {0} \
   CONFIG.c_include_mm2s {Omit} \
   CONFIG.c_include_mm2s_stsfifo {false} \
   CONFIG.c_mm2s_include_sf {false} \
 ] $axi_datamover

  # Create instance: log_length, and set properties
  set log_length [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 log_length ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {5} \
   CONFIG.DIN_TO {1} \
   CONFIG.DOUT_WIDTH {5} \
 ] $log_length

  # Create instance: request, and set properties
  set request [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 request ]

  # Create instance: sync_manager, and set properties
  set block_name sync_manager
  set block_cell_name sync_manager
  if { [catch {set sync_manager [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $sync_manager eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins M_AXI_position] [get_bd_intf_pins axi_datamover/M_AXI_S2MM]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins S_AXIS_position] [get_bd_intf_pins axi_datamover/S_AXIS_S2MM]
  connect_bd_intf_net -intf_net sync_manager_0_M_AXIS [get_bd_intf_pins axi_datamover/S_AXIS_S2MM_CMD] [get_bd_intf_pins sync_manager/M_AXIS]

  # Create port connections
  connect_bd_net -net GPIO_rw_i_1 [get_bd_pins GPIO_rw_i_1] [get_bd_pins log_length/Din] [get_bd_pins request/Din]
  connect_bd_net -net GPIO_rw_i_1_1 [get_bd_pins GPIO_rw_i_2] [get_bd_pins sync_manager/SM_address]
  connect_bd_net -net aclk_1 [get_bd_pins aclk] [get_bd_pins axi_datamover/m_axi_s2mm_aclk] [get_bd_pins axi_datamover/m_axis_s2mm_cmdsts_awclk] [get_bd_pins sync_manager/SYS_aclk]
  connect_bd_net -net aresetn_1 [get_bd_pins aresetn] [get_bd_pins axi_datamover/m_axi_s2mm_aresetn] [get_bd_pins axi_datamover/m_axis_s2mm_cmdsts_aresetn] [get_bd_pins sync_manager/SYS_aresetn]
  connect_bd_net -net sync_manager_SM_read_buffer [get_bd_pins GPIO_rw_o] [get_bd_pins sync_manager/SM_read_buffer]
  connect_bd_net -net xlslice_length_Dout [get_bd_pins log_length/Dout] [get_bd_pins sync_manager/SM_log_length]
  connect_bd_net -net xlslice_request_Dout [get_bd_pins request/Dout] [get_bd_pins sync_manager/SM_request]

  # Perform GUI Layout
  regenerate_bd_layout -hierarchy [get_bd_cells /RAM_Writer] -layout_string {
   "ExpandedHierarchyInLayout":"",
   "guistr":"# # String gsaved with Nlview 6.8.11  2018-08-07 bk=1.4403 VDI=40 GEI=35 GUI=JA:9.0 non-TLS
#  -string -flagsOSRD
preplace port aclk -pg 1 -y 100 -defaultsOSRD
preplace port S_AXIS_position -pg 1 -y 80 -defaultsOSRD
preplace port M_AXI_position -pg 1 -y 110 -defaultsOSRD
preplace port aresetn -pg 1 -y 120 -defaultsOSRD
preplace portBus GPIO_rw_o -pg 1 -y 20 -defaultsOSRD
preplace portBus GPIO_rw_i_1 -pg 1 -y 180 -defaultsOSRD
preplace portBus GPIO_rw_i_2 -pg 1 -y 360 -defaultsOSRD
preplace inst request -pg 1 -lvl 1 -y 180 -defaultsOSRD
preplace inst sync_manager -pg 1 -lvl 2 -y 180 -defaultsOSRD
preplace inst log_length -pg 1 -lvl 1 -y 290 -defaultsOSRD -resize 160 88
preplace inst axi_datamover -pg 1 -lvl 3 -y 130 -defaultsOSRD
preplace netloc Conn1 1 3 1 NJ
preplace netloc Conn2 1 0 3 NJ 80 NJ 80 NJ
preplace netloc GPIO_rw_i_1_1 1 0 2 NJ 360 250J
preplace netloc xlslice_request_Dout 1 1 1 NJ
preplace netloc xlslice_length_Dout 1 1 1 220J
preplace netloc sync_manager_0_M_AXIS 1 2 1 620
preplace netloc aresetn_1 1 0 3 NJ 120 230 290 640
preplace netloc GPIO_rw_i_1 1 0 1 20
preplace netloc aclk_1 1 0 3 NJ 100 240 280 630
preplace netloc sync_manager_SM_read_buffer 1 2 2 610J 20 NJ
levelinfo -pg 1 0 120 430 840 1060 -top 0 -bot 380
"
}

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: Position_Tracker
proc create_hier_cell_Position_Tracker { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_Position_Tracker() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_position
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_raw

  # Create pins
  create_bd_pin -dir I -from 31 -to 0 GPIO_pt
  create_bd_pin -dir I -type clk aclk
  create_bd_pin -dir I -type rst aresetn

  # Create instance: axis_broadcaster_0, and set properties
  set axis_broadcaster_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcaster_0 ]

  # Create instance: extremum_finder, and set properties
  set block_name extremum_finder
  set block_cell_name extremum_finder
  if { [catch {set extremum_finder [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $extremum_finder eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: log_count_extremum, and set properties
  set log_count_extremum [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 log_count_extremum ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {3} \
   CONFIG.DOUT_WIDTH {5} \
 ] $log_count_extremum

  # Create instance: log_shift_extremum, and set properties
  set log_shift_extremum [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 log_shift_extremum ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {0} \
   CONFIG.DOUT_WIDTH {3} \
 ] $log_shift_extremum

  # Create instance: position_tracker, and set properties
  set block_name position_tracker
  set block_cell_name position_tracker
  if { [catch {set position_tracker [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $position_tracker eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins M_AXIS_position] [get_bd_intf_pins position_tracker/M_AXIS]
  connect_bd_intf_net -intf_net S_AXIS_data_1 [get_bd_intf_pins S_AXIS_raw] [get_bd_intf_pins axis_broadcaster_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_broadcaster_0_M00_AXIS [get_bd_intf_pins axis_broadcaster_0/M00_AXIS] [get_bd_intf_pins position_tracker/S_AXIS]
  connect_bd_intf_net -intf_net axis_broadcaster_0_M01_AXIS [get_bd_intf_pins axis_broadcaster_0/M01_AXIS] [get_bd_intf_pins extremum_finder/S_AXIS]

  # Create port connections
  connect_bd_net -net Din_1 [get_bd_pins GPIO_pt] [get_bd_pins log_count_extremum/Din] [get_bd_pins log_shift_extremum/Din]
  connect_bd_net -net SYS_aclk_0_1 [get_bd_pins aclk] [get_bd_pins axis_broadcaster_0/aclk] [get_bd_pins extremum_finder/SYS_aclk] [get_bd_pins position_tracker/SYS_aclk]
  connect_bd_net -net SYS_aresetn_0_1 [get_bd_pins aresetn] [get_bd_pins axis_broadcaster_0/aresetn] [get_bd_pins extremum_finder/SYS_aresetn] [get_bd_pins position_tracker/SYS_aresetn]
  connect_bd_net -net extremum_finder_0_EF_lower_treshold [get_bd_pins extremum_finder/EF_lower_treshold] [get_bd_pins position_tracker/FC_lower_treshold]
  connect_bd_net -net extremum_finder_0_EF_upper_treshold [get_bd_pins extremum_finder/EF_upper_treshold] [get_bd_pins position_tracker/FC_upper_treshold]
  connect_bd_net -net log_count_extremum_Dout [get_bd_pins extremum_finder/EF_log_count] [get_bd_pins log_count_extremum/Dout]
  connect_bd_net -net log_shift_extremum_Dout [get_bd_pins extremum_finder/EF_log_shift] [get_bd_pins log_shift_extremum/Dout]

  # Perform GUI Layout
  regenerate_bd_layout -hierarchy [get_bd_cells /Position_Tracker] -layout_string {
   "ExpandedHierarchyInLayout":"",
   "guistr":"# # String gsaved with Nlview 6.8.11  2018-08-07 bk=1.4403 VDI=40 GEI=35 GUI=JA:9.0 non-TLS
#  -string -flagsOSRD
preplace port M_AXIS_position -pg 1 -y 330 -defaultsOSRD
preplace port S_AXIS_raw -pg 1 -y 280 -defaultsOSRD
preplace port aclk -pg 1 -y 300 -defaultsOSRD
preplace port aresetn -pg 1 -y 320 -defaultsOSRD
preplace portBus GPIO_pt -pg 1 -y 60 -defaultsOSRD
preplace inst axis_broadcaster_0 -pg 1 -lvl 1 -y 300 -defaultsOSRD
preplace inst position_tracker -pg 1 -lvl 2 -y 330 -defaultsOSRD
preplace inst log_shift_extremum -pg 1 -lvl 1 -y 160 -defaultsOSRD
preplace inst log_count_extremum -pg 1 -lvl 1 -y 60 -defaultsOSRD
preplace inst extremum_finder -pg 1 -lvl 2 -y 120 -defaultsOSRD
preplace netloc Conn1 1 2 1 N
preplace netloc extremum_finder_0_EF_upper_treshold 1 1 2 370 20 740
preplace netloc axis_broadcaster_0_M00_AXIS 1 1 1 N
preplace netloc SYS_aresetn_0_1 1 0 2 20 380 350
preplace netloc extremum_finder_0_EF_lower_treshold 1 1 2 360 10 750
preplace netloc log_count_extremum_Dout 1 1 1 330J
preplace netloc Din_1 1 0 1 20
preplace netloc axis_broadcaster_0_M01_AXIS 1 1 1 320
preplace netloc S_AXIS_data_1 1 0 1 NJ
preplace netloc log_shift_extremum_Dout 1 1 1 NJ
preplace netloc SYS_aclk_0_1 1 0 2 20 220 340
levelinfo -pg 1 0 170 560 780 -top 0 -bot 430
"
}

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: PS7
proc create_hier_cell_PS7 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_PS7() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:ddrx_rtl:1.0 DDR
  create_bd_intf_pin -mode Master -vlnv xilinx.com:display_processing_system7:fixedio_rtl:1.0 FIXED_IO
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S_AXI_position

  # Create pins
  create_bd_pin -dir O -from 31 -to 0 GPIO_pt
  create_bd_pin -dir I -from 31 -to 0 GPIO_rw_i
  create_bd_pin -dir O -from 31 -to 0 GPIO_rw_o_1
  create_bd_pin -dir O -from 31 -to 0 GPIO_rw_o_2
  create_bd_pin -dir O -from 31 -to 0 GPIO_sg
  create_bd_pin -dir I -type clk aclk
  create_bd_pin -dir I dcm_locked
  create_bd_pin -dir O -from 0 -to 0 -type rst peripheral_aresetn

  # Create instance: axi_gpio_0, and set properties
  set axi_gpio_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_0 ]
  set_property -dict [ list \
   CONFIG.C_ALL_OUTPUTS {1} \
 ] $axi_gpio_0

  # Create instance: axi_gpio_1, and set properties
  set axi_gpio_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_1 ]
  set_property -dict [ list \
   CONFIG.C_ALL_OUTPUTS_2 {1} \
   CONFIG.C_IS_DUAL {1} \
 ] $axi_gpio_1

  # Create instance: axi_gpio_3, and set properties
  set axi_gpio_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_3 ]
  set_property -dict [ list \
   CONFIG.C_ALL_OUTPUTS {1} \
 ] $axi_gpio_3

  # Create instance: axi_interconnect_0, and set properties
  set axi_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_0 ]
  set_property -dict [ list \
   CONFIG.NUM_MI {1} \
 ] $axi_interconnect_0

  # Create instance: axi_interconnect_1, and set properties
  set axi_interconnect_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_1 ]
  set_property -dict [ list \
   CONFIG.NUM_MI {4} \
   CONFIG.NUM_SI {1} \
 ] $axi_interconnect_1

  # Create instance: processing_system7, and set properties
  set processing_system7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:processing_system7:5.5 processing_system7 ]
  set_property -dict [ list \
   CONFIG.PCW_FPGA_FCLK0_ENABLE {1} \
   CONFIG.PCW_FPGA_FCLK1_ENABLE {0} \
   CONFIG.PCW_FPGA_FCLK2_ENABLE {0} \
   CONFIG.PCW_FPGA_FCLK3_ENABLE {0} \
   CONFIG.PCW_USE_M_AXI_GP1 {0} \
   CONFIG.PCW_USE_S_AXI_HP0 {1} \
 ] $processing_system7

  # Create instance: rst_ps7_0_50M, and set properties
  set rst_ps7_0_50M [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 rst_ps7_0_50M ]

  # Create interface connections
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins FIXED_IO] [get_bd_intf_pins processing_system7/FIXED_IO]
  connect_bd_intf_net -intf_net S00_AXI_1 [get_bd_intf_pins axi_interconnect_1/S00_AXI] [get_bd_intf_pins processing_system7/M_AXI_GP0]
  connect_bd_intf_net -intf_net S_AXI_position_1 [get_bd_intf_pins S_AXI_position] [get_bd_intf_pins axi_interconnect_0/S00_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M00_AXI [get_bd_intf_pins axi_interconnect_0/M00_AXI] [get_bd_intf_pins processing_system7/S_AXI_HP0]
  connect_bd_intf_net -intf_net axi_interconnect_1_M00_AXI [get_bd_intf_pins axi_gpio_0/S_AXI] [get_bd_intf_pins axi_interconnect_1/M00_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_1_M01_AXI [get_bd_intf_pins axi_gpio_1/S_AXI] [get_bd_intf_pins axi_interconnect_1/M01_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_1_M02_AXI [get_bd_intf_pins axi_gpio_3/S_AXI] [get_bd_intf_pins axi_interconnect_1/M02_AXI]
  connect_bd_intf_net -intf_net processing_system7_0_DDR [get_bd_intf_pins DDR] [get_bd_intf_pins processing_system7/DDR]

  # Create port connections
  connect_bd_net -net Net [get_bd_pins aclk] [get_bd_pins axi_gpio_0/s_axi_aclk] [get_bd_pins axi_gpio_1/s_axi_aclk] [get_bd_pins axi_gpio_3/s_axi_aclk] [get_bd_pins axi_interconnect_0/ACLK] [get_bd_pins axi_interconnect_0/M00_ACLK] [get_bd_pins axi_interconnect_0/S00_ACLK] [get_bd_pins axi_interconnect_1/ACLK] [get_bd_pins axi_interconnect_1/M00_ACLK] [get_bd_pins axi_interconnect_1/M01_ACLK] [get_bd_pins axi_interconnect_1/M02_ACLK] [get_bd_pins axi_interconnect_1/M03_ACLK] [get_bd_pins axi_interconnect_1/S00_ACLK] [get_bd_pins processing_system7/M_AXI_GP0_ACLK] [get_bd_pins processing_system7/S_AXI_HP0_ACLK] [get_bd_pins rst_ps7_0_50M/slowest_sync_clk]
  connect_bd_net -net axi_gpio_0_gpio_io_o [get_bd_pins GPIO_pt] [get_bd_pins axi_gpio_0/gpio_io_o]
  connect_bd_net -net axi_gpio_1_gpio2_io_o [get_bd_pins GPIO_rw_o_2] [get_bd_pins axi_gpio_1/gpio2_io_o]
  connect_bd_net -net axi_gpio_1_gpio_io_o [get_bd_pins GPIO_rw_o_1] [get_bd_pins axi_gpio_1/gpio_io_o]
  connect_bd_net -net axi_gpio_2_gpio_io_o [get_bd_pins GPIO_sg] [get_bd_pins axi_gpio_3/gpio_io_o]
  connect_bd_net -net dcm_locked_0_1 [get_bd_pins dcm_locked] [get_bd_pins rst_ps7_0_50M/dcm_locked]
  connect_bd_net -net gpio_io_i_0_1 [get_bd_pins GPIO_rw_i] [get_bd_pins axi_gpio_1/gpio_io_i]
  connect_bd_net -net processing_system7_0_FCLK_RESET0_N [get_bd_pins processing_system7/FCLK_RESET0_N] [get_bd_pins rst_ps7_0_50M/ext_reset_in]
  connect_bd_net -net rst_ps7_0_50M_interconnect_aresetn [get_bd_pins axi_interconnect_0/ARESETN] [get_bd_pins axi_interconnect_1/ARESETN] [get_bd_pins rst_ps7_0_50M/interconnect_aresetn]
  connect_bd_net -net rst_ps7_0_50M_peripheral_aresetn [get_bd_pins peripheral_aresetn] [get_bd_pins axi_gpio_0/s_axi_aresetn] [get_bd_pins axi_gpio_1/s_axi_aresetn] [get_bd_pins axi_gpio_3/s_axi_aresetn] [get_bd_pins axi_interconnect_0/M00_ARESETN] [get_bd_pins axi_interconnect_0/S00_ARESETN] [get_bd_pins axi_interconnect_1/M00_ARESETN] [get_bd_pins axi_interconnect_1/M01_ARESETN] [get_bd_pins axi_interconnect_1/M02_ARESETN] [get_bd_pins axi_interconnect_1/M03_ARESETN] [get_bd_pins axi_interconnect_1/S00_ARESETN] [get_bd_pins rst_ps7_0_50M/peripheral_aresetn]

  # Perform GUI Layout
  regenerate_bd_layout -hierarchy [get_bd_cells /PS7] -layout_string {
   "ExpandedHierarchyInLayout":"",
   "guistr":"# # String gsaved with Nlview 6.8.11  2018-08-07 bk=1.4403 VDI=40 GEI=35 GUI=JA:9.0 non-TLS
#  -string -flagsOSRD
preplace port DDR -pg 1 -y 860 -defaultsOSRD
preplace port S_AXI_position -pg 1 -y 830 -defaultsOSRD
preplace port FIXED_IO -pg 1 -y 880 -defaultsOSRD
preplace port aclk -pg 1 -y 230 -defaultsOSRD
preplace port dcm_locked -pg 1 -y 710 -defaultsOSRD
preplace portBus GPIO_rw_o_1 -pg 1 -y 140 -defaultsOSRD
preplace portBus peripheral_aresetn -pg 1 -y 540 -defaultsOSRD
preplace portBus GPIO_rw_o_2 -pg 1 -y 190 -defaultsOSRD
preplace portBus GPIO_pt -pg 1 -y 330 -defaultsOSRD
preplace portBus GPIO_sg -pg 1 -y 470 -defaultsOSRD
preplace portBus GPIO_rw_i -pg 1 -y 20 -defaultsOSRD
preplace inst rst_ps7_0_50M -pg 1 -lvl 1 -y 670 -defaultsOSRD
preplace inst axi_gpio_0 -pg 1 -lvl 2 -y 320 -defaultsOSRD
preplace inst processing_system7 -pg 1 -lvl 2 -y 900 -defaultsOSRD
preplace inst axi_gpio_1 -pg 1 -lvl 2 -y 140 -defaultsOSRD -resize 238 186
preplace inst axi_gpio_3 -pg 1 -lvl 2 -y 460 -defaultsOSRD -resize 248 112
preplace inst axi_interconnect_0 -pg 1 -lvl 1 -y 890 -defaultsOSRD
preplace inst axi_interconnect_1 -pg 1 -lvl 1 -y 330 -defaultsOSRD
preplace netloc processing_system7_0_DDR 1 2 1 NJ
preplace netloc Conn2 1 2 1 NJ
preplace netloc axi_interconnect_1_M01_AXI 1 1 1 390
preplace netloc gpio_io_i_0_1 1 0 3 NJ 20 NJ 20 880
preplace netloc S_AXI_position_1 1 0 1 NJ
preplace netloc processing_system7_0_FCLK_RESET0_N 1 0 3 50 570 NJ 570 870
preplace netloc axi_gpio_2_gpio_io_o 1 2 1 NJ
preplace netloc axi_interconnect_1_M02_AXI 1 1 1 390
preplace netloc axi_gpio_1_gpio_io_o 1 2 1 NJ
preplace netloc rst_ps7_0_50M_interconnect_aresetn 1 0 2 30 770 390
preplace netloc axi_gpio_0_gpio_io_o 1 2 1 NJ
preplace netloc S00_AXI_1 1 0 3 50 550 NJ 550 880
preplace netloc rst_ps7_0_50M_peripheral_aresetn 1 0 3 40 510 410 540 NJ
preplace netloc axi_interconnect_0_M00_AXI 1 1 1 N
preplace netloc axi_gpio_1_gpio2_io_o 1 2 1 NJ
preplace netloc Net 1 0 2 20 560 400
preplace netloc axi_interconnect_1_M00_AXI 1 1 1 N
preplace netloc dcm_locked_0_1 1 0 1 NJ
levelinfo -pg 1 0 220 640 900 -top 0 -bot 1010
"
}

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: Data_Aquisition
proc create_hier_cell_Data_Aquisition { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_Data_Aquisition() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_raw

  # Create pins
  create_bd_pin -dir I -type clk aclk
  create_bd_pin -dir O adc_cdcs_o
  create_bd_pin -dir I -from 13 -to 0 adc_dat_a_i
  create_bd_pin -dir I -from 13 -to 0 adc_dat_b_i

  # Create instance: axis_red_pitaya_adc_0, and set properties
  set axis_red_pitaya_adc_0 [ create_bd_cell -type ip -vlnv pavel-demin:user:axis_red_pitaya_adc:2.0 axis_red_pitaya_adc_0 ]

  set_property -dict [ list \
   CONFIG.FREQ_HZ {125000000} \
 ] [get_bd_pins /Data_Aquisition/axis_red_pitaya_adc_0/aclk]

  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins M_AXIS_raw] [get_bd_intf_pins axis_red_pitaya_adc_0/M_AXIS]

  # Create port connections
  connect_bd_net -net adc_dat_a_1 [get_bd_pins adc_dat_a_i] [get_bd_pins axis_red_pitaya_adc_0/adc_dat_a]
  connect_bd_net -net adc_dat_b_1 [get_bd_pins adc_dat_b_i] [get_bd_pins axis_red_pitaya_adc_0/adc_dat_b]
  connect_bd_net -net axis_red_pitaya_adc_0_adc_csn [get_bd_pins adc_cdcs_o] [get_bd_pins axis_red_pitaya_adc_0/adc_csn]
  connect_bd_net -net clk_wiz_0_clk_out1 [get_bd_pins aclk] [get_bd_pins axis_red_pitaya_adc_0/aclk]

  # Perform GUI Layout
  regenerate_bd_layout -hierarchy [get_bd_cells /Data_Aquisition] -layout_string {
   "ExpandedHierarchyInLayout":"",
   "guistr":"# # String gsaved with Nlview 6.8.11  2018-08-07 bk=1.4403 VDI=40 GEI=35 GUI=JA:9.0 non-TLS
#  -string -flagsOSRD
preplace port M_AXIS_raw -pg 1 -y 70 -defaultsOSRD
preplace port adc_cdcs_o -pg 1 -y 90 -defaultsOSRD
preplace port aclk -pg 1 -y 60 -defaultsOSRD
preplace portBus adc_dat_b_i -pg 1 -y 100 -defaultsOSRD
preplace portBus adc_dat_a_i -pg 1 -y 80 -defaultsOSRD
preplace inst axis_red_pitaya_adc_0 -pg 1 -lvl 1 -y 80 -defaultsOSRD
preplace netloc Conn1 1 1 2 NJ 70 NJ
preplace netloc axis_red_pitaya_adc_0_adc_csn 1 1 2 NJ 90 NJ
preplace netloc adc_dat_a_1 1 0 1 NJ
preplace netloc clk_wiz_0_clk_out1 1 0 1 NJ
preplace netloc adc_dat_b_1 1 0 1 NJ
levelinfo -pg 1 0 140 290 330 -top 0 -bot 160
"
}

  # Restore current instance
  current_bd_instance $oldCurInst
}
  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set DDR [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:ddrx_rtl:1.0 DDR ]
  set FIXED_IO [ create_bd_intf_port -mode Master -vlnv xilinx.com:display_processing_system7:fixedio_rtl:1.0 FIXED_IO ]

  # Create ports
  set adc_cdcs_o [ create_bd_port -dir O adc_cdcs_o ]
  set adc_clk_n_i [ create_bd_port -dir I adc_clk_n_i ]
  set adc_clk_p_i [ create_bd_port -dir I adc_clk_p_i ]
  set adc_dat_a_i [ create_bd_port -dir I -from 13 -to 0 adc_dat_a_i ]
  set adc_dat_b_i [ create_bd_port -dir I -from 13 -to 0 adc_dat_b_i ]
  set dac_clk_o [ create_bd_port -dir O -type clk dac_clk_o ]
  set dac_dat_o [ create_bd_port -dir O -from 13 -to 0 dac_dat_o ]
  set dac_rst_o [ create_bd_port -dir O -type rst dac_rst_o ]
  set dac_sel_o [ create_bd_port -dir O dac_sel_o ]
  set dac_wrt_o [ create_bd_port -dir O dac_wrt_o ]
  set led_o [ create_bd_port -dir O -from 7 -to 0 led_o ]

  # Create instance: Data_Aquisition
  create_hier_cell_Data_Aquisition [current_bd_instance .] Data_Aquisition

  # Create instance: PS7
  create_hier_cell_PS7 [current_bd_instance .] PS7

  # Create instance: Position_Tracker
  create_hier_cell_Position_Tracker [current_bd_instance .] Position_Tracker

  # Create instance: RAM_Writer
  create_hier_cell_RAM_Writer [current_bd_instance .] RAM_Writer

  # Create instance: Signal_Generator
  create_hier_cell_Signal_Generator [current_bd_instance .] Signal_Generator

  # Create instance: clk_wiz_0, and set properties
  set clk_wiz_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:clk_wiz:6.0 clk_wiz_0 ]
  set_property -dict [ list \
   CONFIG.CLKIN1_JITTER_PS {80.0} \
   CONFIG.CLKOUT1_DRIVES {BUFG} \
   CONFIG.CLKOUT1_JITTER {119.348} \
   CONFIG.CLKOUT1_PHASE_ERROR {96.948} \
   CONFIG.CLKOUT1_REQUESTED_OUT_FREQ {125.000} \
   CONFIG.CLKOUT2_DRIVES {BUFG} \
   CONFIG.CLKOUT3_DRIVES {BUFG} \
   CONFIG.CLKOUT4_DRIVES {BUFG} \
   CONFIG.CLKOUT5_DRIVES {BUFG} \
   CONFIG.CLKOUT6_DRIVES {BUFG} \
   CONFIG.CLKOUT7_DRIVES {BUFG} \
   CONFIG.ENABLE_CLOCK_MONITOR {false} \
   CONFIG.FEEDBACK_SOURCE {FDBK_AUTO} \
   CONFIG.MMCM_CLKFBOUT_MULT_F {8.000} \
   CONFIG.MMCM_CLKIN1_PERIOD {8.000} \
   CONFIG.MMCM_CLKIN2_PERIOD {10.000} \
   CONFIG.MMCM_CLKOUT0_DIVIDE_F {8.000} \
   CONFIG.MMCM_COMPENSATION {ZHOLD} \
   CONFIG.MMCM_DIVCLK_DIVIDE {1} \
   CONFIG.PRIMITIVE {MMCM} \
   CONFIG.PRIM_IN_FREQ {125.000} \
   CONFIG.PRIM_SOURCE {Differential_clock_capable_pin} \
   CONFIG.RESET_PORT {reset} \
   CONFIG.RESET_TYPE {ACTIVE_HIGH} \
   CONFIG.USE_LOCKED {true} \
   CONFIG.USE_RESET {false} \
 ] $clk_wiz_0

  # Create interface connections
  connect_bd_intf_net -intf_net Data_Aquisition_M_AXIS_raw [get_bd_intf_pins Data_Aquisition/M_AXIS_raw] [get_bd_intf_pins Position_Tracker/S_AXIS_raw]
  connect_bd_intf_net -intf_net PS7_FIXED_IO_0 [get_bd_intf_ports FIXED_IO] [get_bd_intf_pins PS7/FIXED_IO]
  connect_bd_intf_net -intf_net Position_Tracker_M_AXIS_position [get_bd_intf_pins Position_Tracker/M_AXIS_position] [get_bd_intf_pins RAM_Writer/S_AXIS_position]
  connect_bd_intf_net -intf_net RAM_Writer_M_AXI_position [get_bd_intf_pins PS7/S_AXI_position] [get_bd_intf_pins RAM_Writer/M_AXI_position]
  connect_bd_intf_net -intf_net processing_system7_0_DDR [get_bd_intf_ports DDR] [get_bd_intf_pins PS7/DDR]

  # Create port connections
  connect_bd_net -net PS7_GPIO_pt [get_bd_pins PS7/GPIO_pt] [get_bd_pins Position_Tracker/GPIO_pt]
  connect_bd_net -net PS7_GPIO_rw_o_1 [get_bd_pins PS7/GPIO_rw_o_1] [get_bd_pins RAM_Writer/GPIO_rw_i_1]
  connect_bd_net -net PS7_GPIO_rw_o_2 [get_bd_pins PS7/GPIO_rw_o_2] [get_bd_pins RAM_Writer/GPIO_rw_i_2]
  connect_bd_net -net PS7_GPIO_sg_tri_o [get_bd_pins PS7/GPIO_sg] [get_bd_pins Signal_Generator/GPIO_sg]
  connect_bd_net -net PS7_peripheral_aresetn [get_bd_pins PS7/peripheral_aresetn] [get_bd_pins Position_Tracker/aresetn] [get_bd_pins RAM_Writer/aresetn]
  connect_bd_net -net RAM_Writer_GPIO_rw_o [get_bd_pins PS7/GPIO_rw_i] [get_bd_pins RAM_Writer/GPIO_rw_o]
  connect_bd_net -net Signal_Generator_dac_clk_0 [get_bd_ports dac_clk_o] [get_bd_pins Signal_Generator/dac_clk]
  connect_bd_net -net Signal_Generator_dac_dat_0 [get_bd_ports dac_dat_o] [get_bd_pins Signal_Generator/dac_dat]
  connect_bd_net -net Signal_Generator_dac_rst_0 [get_bd_ports dac_rst_o] [get_bd_pins Signal_Generator/dac_rst]
  connect_bd_net -net Signal_Generator_dac_sel_0 [get_bd_ports dac_sel_o] [get_bd_pins Signal_Generator/dac_sel]
  connect_bd_net -net Signal_Generator_dac_wrt_0 [get_bd_ports dac_wrt_o] [get_bd_pins Signal_Generator/dac_wrt]
  connect_bd_net -net adc_clk_n_i_1 [get_bd_ports adc_clk_n_i] [get_bd_pins clk_wiz_0/clk_in1_n]
  connect_bd_net -net adc_clk_p_i_1 [get_bd_ports adc_clk_p_i] [get_bd_pins clk_wiz_0/clk_in1_p]
  connect_bd_net -net adc_dat_a_1 [get_bd_ports adc_dat_a_i] [get_bd_pins Data_Aquisition/adc_dat_a_i]
  connect_bd_net -net adc_dat_b_1 [get_bd_ports adc_dat_b_i] [get_bd_pins Data_Aquisition/adc_dat_b_i]
  connect_bd_net -net axis_red_pitaya_adc_0_adc_csn [get_bd_ports adc_cdcs_o] [get_bd_pins Data_Aquisition/adc_cdcs_o]
  connect_bd_net -net clk_wiz_0_clk_out1 [get_bd_pins Data_Aquisition/aclk] [get_bd_pins PS7/aclk] [get_bd_pins Position_Tracker/aclk] [get_bd_pins RAM_Writer/aclk] [get_bd_pins Signal_Generator/aclk] [get_bd_pins clk_wiz_0/clk_out1]
  connect_bd_net -net clk_wiz_0_locked [get_bd_pins PS7/dcm_locked] [get_bd_pins clk_wiz_0/locked]

  # Create address segments
  create_bd_addr_seg -range 0x00010000 -offset 0x41200000 [get_bd_addr_spaces PS7/processing_system7/Data] [get_bd_addr_segs PS7/axi_gpio_0/S_AXI/Reg] SEG_axi_gpio_0_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x41220000 [get_bd_addr_spaces PS7/processing_system7/Data] [get_bd_addr_segs PS7/axi_gpio_1/S_AXI/Reg] SEG_axi_gpio_1_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x41210000 [get_bd_addr_spaces PS7/processing_system7/Data] [get_bd_addr_segs PS7/axi_gpio_3/S_AXI/Reg] SEG_axi_gpio_2_Reg
  create_bd_addr_seg -range 0x20000000 -offset 0x00000000 [get_bd_addr_spaces RAM_Writer/axi_datamover/Data_S2MM] [get_bd_addr_segs PS7/processing_system7/S_AXI_HP0/HP0_DDR_LOWOCM] SEG_processing_system7_HP0_DDR_LOWOCM

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ExpandedHierarchyInLayout":"",
   "PinnedBlocks":"",
   "PinnedPorts":"",
   "guistr":"# # String gsaved with Nlview 6.8.11  2018-08-07 bk=1.4403 VDI=40 GEI=35 GUI=JA:9.0 non-TLS
#  -string -flagsOSRD
preplace port DDR -pg 1 -y 120 -defaultsOSRD
preplace port adc_clk_p_i -pg 1 -y 290 -defaultsOSRD
preplace port dac_rst_o -pg 1 -y 610 -defaultsOSRD
preplace port dac_clk_o -pg 1 -y 550 -defaultsOSRD
preplace port FIXED_IO -pg 1 -y 140 -defaultsOSRD
preplace port dac_sel_o -pg 1 -y 640 -defaultsOSRD
preplace port adc_cdcs_o -pg 1 -y 480 -defaultsOSRD
preplace port dac_wrt_o -pg 1 -y 670 -defaultsOSRD
preplace port adc_clk_n_i -pg 1 -y 260 -defaultsOSRD
preplace portBus adc_dat_b_i -pg 1 -y 490 -defaultsOSRD
preplace portBus led_o -pg 1 -y 20 -defaultsOSRD
preplace portBus adc_dat_a_i -pg 1 -y 460 -defaultsOSRD
preplace portBus dac_dat_o -pg 1 -y 580 -defaultsOSRD
preplace inst Position_Tracker -pg 1 -lvl 2 -y 120 -defaultsOSRD -resize 251 206
preplace inst Data_Aquisition -pg 1 -lvl 4 -y 460 -defaultsOSRD -resize 243 140
preplace inst Signal_Generator -pg 1 -lvl 5 -y 610 -defaultsOSRD -resize 247 212
preplace inst RAM_Writer -pg 1 -lvl 3 -y 170 -defaultsOSRD -resize 321 180
preplace inst PS7 -pg 1 -lvl 4 -y 200 -defaultsOSRD -resize 245 242
preplace inst clk_wiz_0 -pg 1 -lvl 1 -y 260 -defaultsOSRD -resize 183 152
preplace netloc processing_system7_0_DDR 1 4 2 NJ 120 NJ
preplace netloc clk_wiz_0_locked 1 1 3 NJ 280 NJ 280 1020
preplace netloc Signal_Generator_dac_clk_0 1 5 1 NJ
preplace netloc PS7_GPIO_rw_o_1 1 2 3 610 350 NJ 350 1330
preplace netloc PS7_FIXED_IO_0 1 4 2 NJ 140 NJ
preplace netloc PS7_GPIO_rw_o_2 1 2 3 620 360 NJ 360 1320
preplace netloc RAM_Writer_M_AXI_position 1 3 1 N
preplace netloc RAM_Writer_GPIO_rw_o 1 3 1 1000
preplace netloc PS7_GPIO_sg_tri_o 1 4 1 1350
preplace netloc axis_red_pitaya_adc_0_adc_csn 1 4 2 NJ 480 NJ
preplace netloc Signal_Generator_dac_wrt_0 1 5 1 NJ
preplace netloc Position_Tracker_M_AXIS_position 1 2 1 N
preplace netloc adc_clk_n_i_1 1 0 1 NJ
preplace netloc Signal_Generator_dac_dat_0 1 5 1 NJ
preplace netloc PS7_GPIO_pt 1 1 4 280 340 NJ 340 NJ 340 1340
preplace netloc adc_dat_a_1 1 0 4 NJ 460 NJ 460 NJ 460 NJ
preplace netloc Signal_Generator_dac_rst_0 1 5 1 NJ
preplace netloc PS7_peripheral_aresetn 1 1 4 290 240 600 270 990J 60 1350
preplace netloc clk_wiz_0_clk_out1 1 1 4 260 250 590 290 1010 640 NJ
preplace netloc Data_Aquisition_M_AXIS_raw 1 1 4 270 370 NJ 370 NJ 370 1320
preplace netloc adc_dat_b_1 1 0 4 NJ 490 NJ 490 NJ 490 NJ
preplace netloc adc_clk_p_i_1 1 0 1 NJ
preplace netloc Signal_Generator_dac_sel_0 1 5 1 NJ
levelinfo -pg 1 0 140 440 800 1170 1500 1670 -top 0 -bot 730
"
}

  # Restore current instance
  current_bd_instance $oldCurInst

  save_bd_design
common::send_msg_id "BD_TCL-1000" "WARNING" "This Tcl script was generated from a block design that has not been validated. It is possible that design <$design_name> may result in errors during validation."

  close_bd_design $design_name 
}
# End of cr_bd_system()
cr_bd_system ""
set_property REGISTERED_WITH_MANAGER "1" [get_files system.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files system.bd ] 

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xc7z010clg400-1 -flow {Vivado Synthesis 2018} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2018" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {
set_property -name "display_name" -value "synth_1_synth_report_utilization_0" -objects $obj

}
set obj [get_runs synth_1]
set_property -name "part" -value "xc7z010clg400-1" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xc7z010clg400-1 -flow {Vivado Implementation 2018} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2018" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_init_report_timing_summary_0" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_opt_report_drc_0" -objects $obj

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_opt_report_timing_summary_0" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_power_opt_report_timing_summary_0" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_place_report_io_0" -objects $obj

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_place_report_utilization_0" -objects $obj

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_place_report_control_sets_0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_place_report_incremental_reuse_0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_place_report_incremental_reuse_1" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_place_report_timing_summary_0" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_post_place_power_opt_report_timing_summary_0" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_phys_opt_report_timing_summary_0" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_drc_0" -objects $obj

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_methodology_0" -objects $obj

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_power_0" -objects $obj

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_route_status_0" -objects $obj

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_timing_summary_0" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_incremental_reuse_0" -objects $obj

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_clock_utilization_0" -objects $obj

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_bus_skew_0" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_post_route_phys_opt_report_timing_summary_0" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_post_route_phys_opt_report_bus_skew_0" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "part" -value "xc7z010clg400-1" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:${_xil_proj_name_}"
set obj [get_dashboards default_dashboard]

# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
# Set current dashboard to 'default_dashboard' 
current_dashboard default_dashboard 

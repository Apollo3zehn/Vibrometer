@using Vibrometer.WebClient.Model
@using Vibrometer.BaseTypes.API
@page "/settings"
@inject AppState state
@inject SignalRService signalR

<h1>Settings</h1>

<div class="row">
    <div class="col-6">
        <div class="card">
            <div class="card-header card-header-tabs card-header-info">
                <div class="nav-tabs-navigation">
                    <div class="nav-tabs-wrapper">
                        <span class="nav-tabs-title">Advanced settings:</span>
                        <ul class="nav nav-tabs" data-tabs="tabs">
                            <li class="nav-item">
                                <a class="nav-link @((this.SelectedGroup == ApiGroup.AxisSwitch ? "active" : ""))" onclick="@(() => SelectGroup(ApiGroup.AxisSwitch))">
                                    <i class="material-icons">bug_report</i> AXIS Switch
                                    <div class="ripple-container"></div>
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link @((this.SelectedGroup == ApiGroup.SignalGenerator ? "active" : ""))" onclick="@(() => SelectGroup(ApiGroup.SignalGenerator))">
                                    <i class="material-icons">bug_report</i> Signal Generator
                                    <div class="ripple-container"></div>
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link @((this.SelectedGroup == ApiGroup.DataAcquisition ? "active" : ""))" onclick="@(() => SelectGroup(ApiGroup.DataAcquisition))">
                                    <i class="material-icons">bug_report</i> Data Acquisition
                                    <div class="ripple-container"></div>
                                </a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="tab-content">
                    <div class="tab-pane active">
                        <ul class="list-group">
                            @switch (this.SelectedGroup)
                            {
                                case ApiGroup.AxisSwitch:
                                    <ApiRecordIntComponent Record="ApiInfo.Instance[ApiMethod.AS_Source]" Value="@state.VibrometerState.AS_Source" />
                                    break;
                                case ApiGroup.SignalGenerator:
                                    <ApiRecordBoolComponent Record="ApiInfo.Instance[ApiMethod.SG_FmEnabled]" Value="@state.VibrometerState.SG_FmEnabled" />
                                    @if (state.VibrometerState.SG_FmEnabled)
                                    {
                                        <ApiRecordIntComponent Record="ApiInfo.Instance[ApiMethod.SG_PhaseSignal]" Value="@state.VibrometerState.SG_PhaseSignal" />
                                    }
                                    <ApiRecordIntComponent Record="ApiInfo.Instance[ApiMethod.SG_PhaseCarrier]" Value="@state.VibrometerState.SG_PhaseCarrier" />
                                    break;
                                case ApiGroup.DataAcquisition:
                                    <ApiRecordBoolComponent Record="ApiInfo.Instance[ApiMethod.DA_SwitchEnabled]" Value="@state.VibrometerState.DA_SwitchEnabled" />
                                    break;
                                default:
                                    break;
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-6">
        <div class="card">
            <div class="card-header card-header-tabs card-header-info">
                <div class="nav-tabs-navigation">
                    <div class="nav-tabs-wrapper">
                        <span class="nav-tabs-title">Advanced settings:</span>
                        <ul class="nav nav-tabs" data-tabs="tabs">
                            <li class="nav-item">
                                <a class="nav-link @((this.SelectedGroup == ApiGroup.PositionTracker ? "active" : ""))" onclick="@(() => SelectGroup(ApiGroup.PositionTracker))">
                                    <i class="material-icons">bug_report</i> Position Tracker
                                    <div class="ripple-container"></div>
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link @((this.SelectedGroup == ApiGroup.Filter ? "active" : ""))" onclick="@(() => SelectGroup(ApiGroup.Filter))">
                                    <i class="material-icons">bug_report</i> Filter
                                    <div class="ripple-container"></div>
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link @((this.SelectedGroup == ApiGroup.FourierTransform ? "active" : ""))" onclick="@(() => SelectGroup(ApiGroup.FourierTransform))">
                                    <i class="material-icons">bug_report</i> Fourier Transform
                                    <div class="ripple-container"></div>
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link @((this.SelectedGroup == ApiGroup.RamWriter ? "active" : ""))" onclick="@(() => SelectGroup(ApiGroup.RamWriter))">
                                    <i class="material-icons">bug_report</i> RAM Writer
                                    <div class="ripple-container"></div>
                                </a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="tab-content">
                    <div class="tab-pane active">
                        <ul class="list-group">
                            @switch (this.SelectedGroup)
                            {
                                case ApiGroup.PositionTracker:
                                    <ApiRecordIntComponent Record="ApiInfo.Instance[ApiMethod.PT_LogScale]" Value="@state.VibrometerState.PT_LogScale" />
                                    <ApiRecordIntComponent Record="ApiInfo.Instance[ApiMethod.PT_LogCountExtremum]" Value="@state.VibrometerState.PT_LogCountExtremum" />
                                    <ApiRecordIntComponent Record="ApiInfo.Instance[ApiMethod.PT_ShiftExtremum]" Value="@state.VibrometerState.PT_ShiftExtremum" />
                                    break;
                                case ApiGroup.Filter:
                                    <ApiRecordIntComponent Record="ApiInfo.Instance[ApiMethod.FI_LogThrottle]" Value="@state.VibrometerState.FI_LogThrottle" />
                                    break;
                                case ApiGroup.FourierTransform:
                                    <ApiRecordBoolComponent Record="ApiInfo.Instance[ApiMethod.FT_Enabled]" Value="@state.VibrometerState.FT_Enabled" />
                                    <ApiRecordIntComponent Record="ApiInfo.Instance[ApiMethod.FT_LogCountAverages]" Value="@state.VibrometerState.FT_LogCountAverages" />
                                    <ApiRecordIntComponent Record="ApiInfo.Instance[ApiMethod.FT_LogThrottle]" Value="@state.VibrometerState.FT_LogThrottle" />
                                    break;
                                case ApiGroup.RamWriter:
                                    <ApiRecordBoolComponent Record="ApiInfo.Instance[ApiMethod.RW_Enabled]" Value="@state.VibrometerState.RW_Enabled" />
                                    <ApiRecordBoolComponent Record="ApiInfo.Instance[ApiMethod.RW_RequestEnabled]" Value="@state.VibrometerState.RW_RequestEnabled" />
                                    <ApiRecordIntComponent Record="ApiInfo.Instance[ApiMethod.RW_LogLength]" Value="@state.VibrometerState.RW_LogLength" />
                                    <ApiRecordIntComponent Record="ApiInfo.Instance[ApiMethod.RW_LogThrottle]" Value="@state.VibrometerState.RW_LogThrottle" />
                                    <ApiRecordIntComponent Record="ApiInfo.Instance[ApiMethod.RW_ReadBuffer]" Value="@state.VibrometerState.RW_ReadBuffer" />
                                    break;
                                default:
                                    break;
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@functions
{
    private ApiGroup SelectedGroup { get; set; }

    protected override void OnInit()
    {
        this.SelectedGroup = ApiGroup.AxisSwitch;

        state.PropertyChanged += (sender, e) =>
        {
            base.StateHasChanged();
        };
    }

    private void SelectGroup(ApiGroup group)
    {
        this.SelectedGroup = group;
    }

    private void IncrementCount()
    {
        signalR.Connection.InvokeAsync("ToggleHubEnabled");
    }
}
